SET search_path = public,contrib,tap;

BEGIN;
SELECT plan(32);
--SELECT * FROM no_plan();

SELECT has_function('multi_array_agg');
SELECT has_function('multi_array_agg', ARRAY['text[]']);
SELECT is_aggregate('multi_array_agg');
SELECT is_aggregate('multi_array_agg', ARRAY['text[]']);
SELECT volatility_is('multi_array_agg', ARRAY['text[]'], 'immutable');
SELECT function_returns('multi_array_agg', ARRAY['text[]'], 'text[]');
SELECT function_lang_is('multi_array_agg', ARRAY['text[]'], 'internal');

SELECT has_view(
    'public',
    'distribution_details',
    'Should have view public.distribution_details'
);

SELECT columns_are('public', 'distribution_details', ARRAY[
    'name',
    'version',
    'abstract',
    'description',
    'relstatus',
    'owner',
    'sha1',
    'meta',
    'extensions',
    'tags'
]);

SELECT has_column(  'distribution_details', 'name' );
SELECT col_type_is( 'distribution_details', 'name', 'citext' );
SELECT has_column(  'distribution_details', 'version' );
SELECT col_type_is( 'distribution_details', 'version', 'semver' );
SELECT has_column(  'distribution_details', 'abstract' );
SELECT col_type_is( 'distribution_details', 'abstract', 'text' );
SELECT has_column(  'distribution_details', 'description' );
SELECT col_type_is( 'distribution_details', 'description', 'text' );
SELECT has_column(  'distribution_details', 'relstatus' );
SELECT col_type_is( 'distribution_details', 'relstatus', 'relstatus' );
SELECT has_column(  'distribution_details', 'owner' );
SELECT col_type_is( 'distribution_details', 'owner', 'label' );
SELECT has_column(  'distribution_details', 'sha1' );
SELECT col_type_is( 'distribution_details', 'sha1', 'citext' );
SELECT has_column(  'distribution_details', 'meta' );
SELECT col_type_is( 'distribution_details', 'meta', 'text' );
SELECT has_column(  'distribution_details', 'extensions' );
SELECT col_type_is( 'distribution_details', 'extensions', 'text[]' );
SELECT has_column(  'distribution_details', 'tags' );
SELECT col_type_is( 'distribution_details', 'tags', 'citext[]' );

/*****************************************************************************/
-- Make sure that the pgxn user can use the view.
GRANT USAGE ON SCHEMA tap TO pgxn;
SET ROLE pgxn;

SELECT ok(
    insert_user('theory', 'wet blanket', email := 'theory@pgxn.org'),
    'Insert user "theory"'
);

SELECT lives_ok(
    $$ SELECT add_distribution('theory', 'foo', '{
        "name":        "pair",
        "version":     "0.0.1",
        "license":     "postgresql",
        "maintainer":  "theory",
        "abstract":    "whatever"
    }') $$,
    'Add a distribution'
);

SELECT results_eq(
    'SELECT * FROM distribution_details',
    $$ VALUES('pair'::citext,'0.0.1'::semver, 'whatever', '','stable'::relstatus,'theory'::label,'foo'::citext,'{
   "name": "pair",
   "abstract": "whatever",
   "version": "0.0.1",
   "maintainer": "theory",
   "release_status": "stable",
   "owner": "theory",
   "sha1": "foo",
   "license": "postgresql",
   "provides": {
      "pair": {
         "version": "0.0.1"
      }
   }
}
', ARRAY[['pair','0.0.1']],'{}'::citext[]) $$,
   'PGXN user should be able to select from the view'
);

SELECT * FROM finish();
ROLLBACK;
